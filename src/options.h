/* options header */

#ifndef HEADER_OPTIONS_H
#define HEADER_OPTIONS_H

void options_init (void);
void options_make_pointers (char *s);
int options_process (int argc, char *argv[]);

#define OPTIONS_SIZE 5000
#define OPTIONS_PARM_SIZE 10000
#define OPTIONS_ENV_SIZE 1000
#define OPTIONS_MAXCOND 1000

#define OPT_GROUP_CONTROL          0x0100
#define OPT_GROUP_CONDITIONAL      0x0200

enum
{
 OPT_APPENDERR=OPT_GROUP_CONTROL,
 OPT_AUTORATE,
 OPT_AUTORATEIP,
 OPT_AUTORATEOP,
 OPT_CACHER,
 OPT_CACHEW,
 OPT_CONFIG,
 OPT_CONFV, 
 OPT_COUNT,
 OPT_CYLINDERS,
 OPT_DATARATE,
 OPT_DATARATEIP, 
 OPT_DATARATEOP,
 OPT_DESCRIPT,
 OPT_DETECT,
 OPT_DISK,
 OPT_DISKDESC,
 OPT_DISKDESCF,
 OPT_ECHO,
 OPT_ECHOQ,
 OPT_ENTDESC,
 OPT_ERASE,
 OPT_FDWA_ALL,
 OPT_FDWA_1,
 OPT_FDWA_2, 
 OPT_FLAGS,
 OPT_FINISH,
 OPT_FM,
 OPT_FMIP,
 OPT_FMOP,
 OPT_FMTGAP,
 OPT_FORCE,
 OPT_FORCESIDE,
 OPT_FORMAT,
 OPT_GAPSET,
 OPT_HEADS,
 OPT_HELP,
 OPT_IDSTEP,
 OPT_IF,
 OPT_IGNORE_ERR,
 OPT_INFO,
 OPT_ISIDE,
 OPT_ITYPE,
 OPT_LCON,
 OPT_LCONW,
 OPT_LCONS,
 OPT_LFORMAT,
 OPT_LOG,
 OPT_LTYPE,
 OPT_NOFILL, 
 OPT_NOFORMAT,
 OPT_NOMULTI,
 OPT_NOSKIP,
 OPT_ODSTEP,
 OPT_OF,
 OPT_OSIDE,
 OPT_OTYPE,
 OPT_PSKEW,
 OPT_PSKEW0,
 OPT_PSKEW1,
 OPT_RETRY_L1,
 OPT_RETRY_L2,
 OPT_RWGAP,
 OPT_SCANHEAD,
 OPT_SECBASE,
 OPT_SECBASE2S,
 OPT_SECBASE2C,
 OPT_SECSIZE,
 OPT_SECTORS,
 OPT_SIDE1AS0,
 OPT_SIDEDNESS,
 OPT_SIDEOFFS, 
 OPT_SIGNATURE,
 OPT_SKEW,
 OPT_SKEW_OFS,
 OPT_START,
 OPT_SFMODE,
 OPT_UNATTENDED,
 OPT_UNATTRAB,
 OPT_UNATTRPS,
 OPT_UNATTSEEK,
 OPT_VARSET,
 OPT_VARUSET,
 OPT_VERBOSE,
 OPT_VERSION
};

enum
{
 // Conditional option parsing
 OPT_IF_EGT=OPT_GROUP_CONDITIONAL,
 OPT_IF_ELT,
 OPT_IF_EQ,
 OPT_IF_GT,
 OPT_IF_LT,
 OPT_IF_NEGT,
 OPT_IF_NELT,
 OPT_IF_NEQ,
 OPT_IF_NGT,
 OPT_IF_NLT,
 OPT_IF_NSET,
 OPT_IF_SET,
 OPT_IF_SYSTEM,
 OPT_IF_FALSE,
 OPT_IF_TRUE,
 OPT_IF_ELSE,
 OPT_IF_END,
 OPT_IF_CMPMODE
};

typedef struct short_options_trans_t
{
 int option;
 int longno;
}short_options_trans_t;
   
#endif     /* HEADER_OPTIONS_H */
